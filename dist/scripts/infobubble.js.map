{"version":3,"sources":["../bower_components/js-info-bubble/src/infobubble.js"],"names":["InfoBubble","opt_options","this","extend","google","maps","OverlayView","tabs_","activeTab_","baseZIndex_","isOpen_","options","undefined","BACKGROUND_COLOR_","BORDER_COLOR_","BORDER_RADIUS_","BORDER_WIDTH_","PADDING_","ARROW_POSITION_","MIN_WIDTH_","SHADOW_STYLE_","ARROW_SIZE_","ARROW_STYLE_","CLOSE_SRC_","buildDom_","setValues","window","prototype","obj1","obj2","object","property","apply","bubble","bubble_","document","createElement","style","tabsContainer","tabsContainer_","close","close_","src","get","that","event","addDomListener","trigger","contentContainer","contentContainer_","content","content_","appendChild","arrow","arrow_","arrowOuter","arrowOuter_","arrowInner","arrowInner_","arrowSize","getArrowSize_","px","bubbleShadow","bubbleShadow_","stylesheet","setAttribute","animationName_","Math","round","random","css","textContent","getElementsByTagName","setBackgroundClassName","className","set","backgroundClassName_changed","setTabClassName","tabClassName_changed","updateTabStyles_","getArrowStyle_","parseInt","setArrowStyle","arrowStyle_changed","arrowSize_changed","setArrowSize","size","borderWidth_changed","setArrowPosition","pos","getArrowPosition_","arrowPosition_changed","redraw_","setZIndex","zIndex","getZIndex","zIndex_changed","setShadowStyle","shadowStyle","getShadowStyle_","shadowStyle_changed","display","shadow","backgroundColor","draw","showCloseButton","hideCloseButton","hideCloseButton_changed","setBackgroundColor","color","backgroundColor_changed","setBorderColor","borderColor_changed","borderColor","setBorderRadius","radius","getBorderRadius_","borderRadius_changed","borderRadius","borderWidth","getBorderWidth_","setBorderWidth","width","updateArrowStyle_","arrowStyle","arrowOuterSizePx","arrowInnerSizePx","max","outer","inner","setPadding","padding","setCloseSrc","getPadding_","padding_changed","num","addEvents_","events","listeners_","i","push","e","cancelBubble","stopPropagation","onAdd","panes","getPanes","floatPane","floatShadow","projection","getProjection","latLng","tabHeight","offsetHeight","anchorHeight","getAnchorHeight_","arrowPosition","fromLatLngToDivPixel","offsetWidth","height","top","y","left","x","onRemove","parentNode","removeChild","listener","removeListener","isOpen","replace","open","opt_map","opt_anchor","setTimeout","open_","updateContent_","setMap","bindTo","animation","pan","panToView","setPosition","position","getPosition","position_changed","map","mapDiv","getDiv","mapHeight","centerPos","fromLatLngToContainerPixel","getCenter","spaceTop","spaceBottom","needsTop","deltaY","fromContainerPixelToLatLng","panTo","htmlToDocumentFragment_","htmlString","tempDiv","innerHTML","childNodes","length","firstChild","fragment","createDocumentFragment","removeChildren_","node","child","setContent","getContent","image","images","imageLoaded_","index","tab","setTabStyle_","marginRight","borderRadiusPx","styles","cssFloat","cursor","border","whiteSpace","borderRadiusTopLeft","MozBorderRadiusTopleft","webkitBorderTopLeftRadius","borderRadiusTopRight","MozBorderRadiusTopright","webkitBorderTopRightRadius","addTabActions_","listener_","setTabActive_","setTabActive","activeTab","setMaxWidth","maxWidth_changed","setMaxHeight","maxHeight_changed","setMinWidth","minWidth_changed","setMinHeight","minHeight_changed","addTab","label","updateTab","opt_label","opt_content","removeTab","splice","t","getElementSize_","element","opt_maxWidth","opt_maxHeight","sizer","cloneNode","body","Size","figureOutSize_","positionCloseButton_","gutter","mapWidth","maxWidth","maxHeight","min","tabWidth","tabSize","contentSize","tabHeight_","anchor","anchorPoint","anchorPoint_changed","bw","right","c","clientHeight","scrollHeight"],"mappings":"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","file":"infobubble.js","sourcesContent":["// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @externs_url https://raw.githubusercontent.com/google/closure-compiler/master/contrib/externs/maps/google_maps_api_v3_16.js\n// ==/ClosureCompiler==\n\n/**\n * @name CSS3 InfoBubble with tabs for Google Maps API V3\n * @version 0.8\n * @author Luke Mahe\n * @fileoverview\n * This library is a CSS Infobubble with tabs. It uses css3 rounded corners and\n * drop shadows and animations. It also allows tabs\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A CSS3 InfoBubble v0.8\n * @param {Object.<string, *>=} opt_options Optional properties to set.\n * @extends {google.maps.OverlayView}\n * @constructor\n */\nfunction InfoBubble(opt_options) {\n  this.extend(InfoBubble, google.maps.OverlayView);\n  this.tabs_ = [];\n  this.activeTab_ = null;\n  this.baseZIndex_ = 100;\n  this.isOpen_ = false;\n\n  var options = opt_options || {};\n\n  if (options['backgroundColor'] == undefined) {\n    options['backgroundColor'] = this.BACKGROUND_COLOR_;\n  }\n\n  if (options['borderColor'] == undefined) {\n    options['borderColor'] = this.BORDER_COLOR_;\n  }\n\n  if (options['borderRadius'] == undefined) {\n    options['borderRadius'] = this.BORDER_RADIUS_;\n  }\n\n  if (options['borderWidth'] == undefined) {\n    options['borderWidth'] = this.BORDER_WIDTH_;\n  }\n\n  if (options['padding'] == undefined) {\n    options['padding'] = this.PADDING_;\n  }\n\n  if (options['arrowPosition'] == undefined) {\n    options['arrowPosition'] = this.ARROW_POSITION_;\n  }\n\n  if (options['disableAutoPan'] == undefined) {\n    options['disableAutoPan'] = false;\n  }\n\n  if (options['disableAnimation'] == undefined) {\n    options['disableAnimation'] = false;\n  }\n\n  if (options['minWidth'] == undefined) {\n    options['minWidth'] = this.MIN_WIDTH_;\n  }\n\n  if (options['shadowStyle'] == undefined) {\n    options['shadowStyle'] = this.SHADOW_STYLE_;\n  }\n\n  if (options['arrowSize'] == undefined) {\n    options['arrowSize'] = this.ARROW_SIZE_;\n  }\n\n  if (options['arrowStyle'] == undefined) {\n    options['arrowStyle'] = this.ARROW_STYLE_;\n  }\n\n  if (options['closeSrc'] == undefined) {\n    options['closeSrc'] = this.CLOSE_SRC_;\n  }\n\n  this.buildDom_();\n  this.setValues(options);\n}\nwindow['InfoBubble'] = InfoBubble;\n\n\n/**\n * Default arrow size\n * @const\n * @private\n */\nInfoBubble.prototype.ARROW_SIZE_ = 15;\n\n\n/**\n * Default arrow style\n * @const\n * @private\n */\nInfoBubble.prototype.ARROW_STYLE_ = 0;\n\n\n/**\n * Default shadow style\n * @const\n * @private\n */\nInfoBubble.prototype.SHADOW_STYLE_ = 1;\n\n\n/**\n * Default min width\n * @const\n * @private\n */\nInfoBubble.prototype.MIN_WIDTH_ = 50;\n\n\n/**\n * Default arrow position\n * @const\n * @private\n */\nInfoBubble.prototype.ARROW_POSITION_ = 50;\n\n\n/**\n * Default padding\n * @const\n * @private\n */\nInfoBubble.prototype.PADDING_ = 10;\n\n\n/**\n * Default border width\n * @const\n * @private\n */\nInfoBubble.prototype.BORDER_WIDTH_ = 1;\n\n\n/**\n * Default border color\n * @const\n * @private\n */\nInfoBubble.prototype.BORDER_COLOR_ = '#ccc';\n\n\n/**\n * Default border radius\n * @const\n * @private\n */\nInfoBubble.prototype.BORDER_RADIUS_ = 10;\n\n\n/**\n * Default background color\n * @const\n * @private\n */\nInfoBubble.prototype.BACKGROUND_COLOR_ = '#fff';\n\n/**\n * Default close image source\n * @const\n * @private\n */\nInfoBubble.prototype.CLOSE_SRC_ = 'https://maps.gstatic.com/intl/en_us/mapfiles/iw_close.gif';\n\n/**\n * Extends a objects prototype by anothers.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\nInfoBubble.prototype.extend = function(obj1, obj2) {\n  return (function(object) {\n    for (var property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n    return this;\n  }).apply(obj1, [obj2]);\n};\n\n\n/**\n * Builds the InfoBubble dom\n * @private\n */\nInfoBubble.prototype.buildDom_ = function() {\n  var bubble = this.bubble_ = document.createElement('DIV');\n  bubble.style['position'] = 'absolute';\n  bubble.style['zIndex'] = this.baseZIndex_;\n\n  var tabsContainer = this.tabsContainer_ = document.createElement('DIV');\n  tabsContainer.style['position'] = 'relative';\n\n  // Close button\n  var close = this.close_ = document.createElement('IMG');\n  close.style['position'] = 'absolute';\n  close.style['border'] = 0;\n  close.style['zIndex'] = this.baseZIndex_ + 1;\n  close.style['cursor'] = 'pointer';\n  close.src = this.get('closeSrc');\n\n  var that = this;\n  google.maps.event.addDomListener(close, 'click', function() {\n    that.close();\n    google.maps.event.trigger(that, 'closeclick');\n  });\n\n  // Content area\n  var contentContainer = this.contentContainer_ = document.createElement('DIV');\n  contentContainer.style['overflowX'] = 'auto';\n  contentContainer.style['overflowY'] = 'auto';\n  contentContainer.style['cursor'] = 'default';\n  contentContainer.style['clear'] = 'both';\n  contentContainer.style['position'] = 'relative';\n\n  var content = this.content_ = document.createElement('DIV');\n  contentContainer.appendChild(content);\n\n  // Arrow\n  var arrow = this.arrow_ = document.createElement('DIV');\n  arrow.style['position'] = 'relative';\n\n  var arrowOuter = this.arrowOuter_ = document.createElement('DIV');\n  var arrowInner = this.arrowInner_ = document.createElement('DIV');\n\n  var arrowSize = this.getArrowSize_();\n\n  arrowOuter.style['position'] = arrowInner.style['position'] = 'absolute';\n  arrowOuter.style['left'] = arrowInner.style['left'] = '50%';\n  arrowOuter.style['height'] = arrowInner.style['height'] = '0';\n  arrowOuter.style['width'] = arrowInner.style['width'] = '0';\n  arrowOuter.style['marginLeft'] = this.px(-arrowSize);\n  arrowOuter.style['borderWidth'] = this.px(arrowSize);\n  arrowOuter.style['borderBottomWidth'] = 0;\n\n  // Shadow\n  var bubbleShadow = this.bubbleShadow_ = document.createElement('DIV');\n  bubbleShadow.style['position'] = 'absolute';\n\n  // Hide the InfoBubble by default\n  bubble.style['display'] = bubbleShadow.style['display'] = 'none';\n\n  bubble.appendChild(this.tabsContainer_);\n  bubble.appendChild(close);\n  bubble.appendChild(contentContainer);\n  arrow.appendChild(arrowOuter);\n  arrow.appendChild(arrowInner);\n  bubble.appendChild(arrow);\n\n  var stylesheet = document.createElement('style');\n  stylesheet.setAttribute('type', 'text/css');\n\n  /**\n   * The animation for the infobubble\n   * @type {string}\n   */\n  this.animationName_ = '_ibani_' + Math.round(Math.random() * 10000);\n\n  var css = '.' + this.animationName_ + '{-webkit-animation-name:' +\n      this.animationName_ + ';-webkit-animation-duration:0.5s;' +\n      '-webkit-animation-iteration-count:1;}' +\n      '@-webkit-keyframes ' + this.animationName_ + ' {from {' +\n      '-webkit-transform: scale(0)}50% {-webkit-transform: scale(1.2)}90% ' +\n      '{-webkit-transform: scale(0.95)}to {-webkit-transform: scale(1)}}';\n\n  stylesheet.textContent = css;\n  document.getElementsByTagName('head')[0].appendChild(stylesheet);\n};\n\n\n/**\n * Sets the background class name\n *\n * @param {string} className The class name to set.\n */\nInfoBubble.prototype.setBackgroundClassName = function(className) {\n  this.set('backgroundClassName', className);\n};\nInfoBubble.prototype['setBackgroundClassName'] = InfoBubble.prototype.setBackgroundClassName;\n\n\n/**\n * changed MVC callback\n */\nInfoBubble.prototype.backgroundClassName_changed = function() {\n  this.content_.className = this.get('backgroundClassName');\n};\nInfoBubble.prototype['backgroundClassName_changed'] = InfoBubble.prototype.backgroundClassName_changed;\n\n\n/**\n * Sets the class of the tab\n *\n * @param {string} className the class name to set.\n */\nInfoBubble.prototype.setTabClassName = function(className) {\n  this.set('tabClassName', className);\n};\nInfoBubble.prototype['setTabClassName'] = InfoBubble.prototype.setTabClassName;\n\n\n/**\n * tabClassName changed MVC callback\n */\nInfoBubble.prototype.tabClassName_changed = function() {\n  this.updateTabStyles_();\n};\nInfoBubble.prototype['tabClassName_changed'] = InfoBubble.prototype.tabClassName_changed;\n\n\n/**\n * Gets the style of the arrow\n *\n * @private\n * @return {number} The style of the arrow.\n */\nInfoBubble.prototype.getArrowStyle_ = function() {\n  return parseInt(this.get('arrowStyle'), 10) || 0;\n};\n\n\n/**\n * Sets the style of the arrow\n *\n * @param {number} style The style of the arrow.\n */\nInfoBubble.prototype.setArrowStyle = function(style) {\n  this.set('arrowStyle', style);\n};\nInfoBubble.prototype['setArrowStyle'] = InfoBubble.prototype.setArrowStyle;\n\n\n/**\n * Arrow style changed MVC callback\n */\nInfoBubble.prototype.arrowStyle_changed = function() {\n  this.arrowSize_changed();\n};\nInfoBubble.prototype['arrowStyle_changed'] = InfoBubble.prototype.arrowStyle_changed;\n\n\n/**\n * Gets the size of the arrow\n *\n * @private\n * @return {number} The size of the arrow.\n */\nInfoBubble.prototype.getArrowSize_ = function() {\n  return parseInt(this.get('arrowSize'), 10) || 0;\n};\n\n\n/**\n * Sets the size of the arrow\n *\n * @param {number} size The size of the arrow.\n */\nInfoBubble.prototype.setArrowSize = function(size) {\n  this.set('arrowSize', size);\n};\nInfoBubble.prototype['setArrowSize'] = InfoBubble.prototype.setArrowSize;\n\n\n/**\n * Arrow size changed MVC callback\n */\nInfoBubble.prototype.arrowSize_changed = function() {\n  this.borderWidth_changed();\n};\nInfoBubble.prototype['arrowSize_changed'] = InfoBubble.prototype.arrowSize_changed;\n\n\n/**\n * Set the position of the InfoBubble arrow\n *\n * @param {number} pos The position to set.\n */\nInfoBubble.prototype.setArrowPosition = function(pos) {\n  this.set('arrowPosition', pos);\n};\nInfoBubble.prototype['setArrowPosition'] = InfoBubble.prototype.setArrowPosition;\n\n\n/**\n * Get the position of the InfoBubble arrow\n *\n * @private\n * @return {number} The position..\n */\nInfoBubble.prototype.getArrowPosition_ = function() {\n  return parseInt(this.get('arrowPosition'), 10) || 0;\n};\n\n\n/**\n * arrowPosition changed MVC callback\n */\nInfoBubble.prototype.arrowPosition_changed = function() {\n  var pos = this.getArrowPosition_();\n  this.arrowOuter_.style['left'] = this.arrowInner_.style['left'] = pos + '%';\n\n  this.redraw_();\n};\nInfoBubble.prototype['arrowPosition_changed'] = InfoBubble.prototype.arrowPosition_changed;\n\n\n/**\n * Set the zIndex of the InfoBubble\n *\n * @param {number} zIndex The zIndex to set.\n */\nInfoBubble.prototype.setZIndex = function(zIndex) {\n  this.set('zIndex', zIndex);\n};\nInfoBubble.prototype['setZIndex'] = InfoBubble.prototype.setZIndex;\n\n\n/**\n * Get the zIndex of the InfoBubble\n *\n * @return {number} The zIndex to set.\n */\nInfoBubble.prototype.getZIndex = function() {\n  return parseInt(this.get('zIndex'), 10) || this.baseZIndex_;\n};\n\n\n/**\n * zIndex changed MVC callback\n */\nInfoBubble.prototype.zIndex_changed = function() {\n  var zIndex = this.getZIndex();\n\n  this.bubble_.style['zIndex'] = this.baseZIndex_ = zIndex;\n  this.close_.style['zIndex'] = zIndex + 1;\n};\nInfoBubble.prototype['zIndex_changed'] = InfoBubble.prototype.zIndex_changed;\n\n\n/**\n * Set the style of the shadow\n *\n * @param {number} shadowStyle The style of the shadow.\n */\nInfoBubble.prototype.setShadowStyle = function(shadowStyle) {\n  this.set('shadowStyle', shadowStyle);\n};\nInfoBubble.prototype['setShadowStyle'] = InfoBubble.prototype.setShadowStyle;\n\n\n/**\n * Get the style of the shadow\n *\n * @private\n * @return {number} The style of the shadow.\n */\nInfoBubble.prototype.getShadowStyle_ = function() {\n  return parseInt(this.get('shadowStyle'), 10) || 0;\n};\n\n\n/**\n * shadowStyle changed MVC callback\n */\nInfoBubble.prototype.shadowStyle_changed = function() {\n  var shadowStyle = this.getShadowStyle_();\n\n  var display = '';\n  var shadow = '';\n  var backgroundColor = '';\n  switch (shadowStyle) {\n    case 0:\n      display = 'none';\n      break;\n    case 1:\n      shadow = '40px 15px 10px rgba(33,33,33,0.3)';\n      backgroundColor = 'transparent';\n      break;\n    case 2:\n      shadow = '0 0 2px rgba(33,33,33,0.3)';\n      backgroundColor = 'rgba(33,33,33,0.35)';\n      break;\n  }\n  this.bubbleShadow_.style['boxShadow'] =\n      this.bubbleShadow_.style['webkitBoxShadow'] =\n      this.bubbleShadow_.style['MozBoxShadow'] = shadow;\n  this.bubbleShadow_.style['backgroundColor'] = backgroundColor;\n  if (this.isOpen_) {\n    this.bubbleShadow_.style['display'] = display;\n    this.draw();\n  }\n};\nInfoBubble.prototype['shadowStyle_changed'] = InfoBubble.prototype.shadowStyle_changed;\n\n\n/**\n * Show the close button\n */\nInfoBubble.prototype.showCloseButton = function() {\n  this.set('hideCloseButton', false);\n};\nInfoBubble.prototype['showCloseButton'] = InfoBubble.prototype.showCloseButton;\n\n\n/**\n * Hide the close button\n */\nInfoBubble.prototype.hideCloseButton = function() {\n  this.set('hideCloseButton', true);\n};\nInfoBubble.prototype['hideCloseButton'] = InfoBubble.prototype.hideCloseButton;\n\n\n/**\n * hideCloseButton changed MVC callback\n */\nInfoBubble.prototype.hideCloseButton_changed = function() {\n  this.close_.style['display'] = this.get('hideCloseButton') ? 'none' : '';\n};\nInfoBubble.prototype['hideCloseButton_changed'] = InfoBubble.prototype.hideCloseButton_changed;\n\n\n/**\n * Set the background color\n *\n * @param {string} color The color to set.\n */\nInfoBubble.prototype.setBackgroundColor = function(color) {\n  if (color) {\n    this.set('backgroundColor', color);\n  }\n};\nInfoBubble.prototype['setBackgroundColor'] = InfoBubble.prototype.setBackgroundColor;\n\n\n/**\n * backgroundColor changed MVC callback\n */\nInfoBubble.prototype.backgroundColor_changed = function() {\n  var backgroundColor = this.get('backgroundColor');\n  this.contentContainer_.style['backgroundColor'] = backgroundColor;\n\n  this.arrowInner_.style['borderColor'] = backgroundColor +\n      ' transparent transparent';\n  this.updateTabStyles_();\n};\nInfoBubble.prototype['backgroundColor_changed'] = InfoBubble.prototype.backgroundColor_changed;\n\n\n/**\n * Set the border color\n *\n * @param {string} color The border color.\n */\nInfoBubble.prototype.setBorderColor = function(color) {\n  if (color) {\n    this.set('borderColor', color);\n  }\n};\nInfoBubble.prototype['setBorderColor'] = InfoBubble.prototype.setBorderColor;\n\n\n/**\n * borderColor changed MVC callback\n */\nInfoBubble.prototype.borderColor_changed = function() {\n  var borderColor = this.get('borderColor');\n\n  var contentContainer = this.contentContainer_;\n  var arrowOuter = this.arrowOuter_;\n  contentContainer.style['borderColor'] = borderColor;\n\n  arrowOuter.style['borderColor'] = borderColor +\n      ' transparent transparent';\n\n  contentContainer.style['borderStyle'] =\n      arrowOuter.style['borderStyle'] =\n      this.arrowInner_.style['borderStyle'] = 'solid';\n\n  this.updateTabStyles_();\n};\nInfoBubble.prototype['borderColor_changed'] = InfoBubble.prototype.borderColor_changed;\n\n\n/**\n * Set the radius of the border\n *\n * @param {number} radius The radius of the border.\n */\nInfoBubble.prototype.setBorderRadius = function(radius) {\n  this.set('borderRadius', radius);\n};\nInfoBubble.prototype['setBorderRadius'] = InfoBubble.prototype.setBorderRadius;\n\n\n/**\n * Get the radius of the border\n *\n * @private\n * @return {number} The radius of the border.\n */\nInfoBubble.prototype.getBorderRadius_ = function() {\n  return parseInt(this.get('borderRadius'), 10) || 0;\n};\n\n\n/**\n * borderRadius changed MVC callback\n */\nInfoBubble.prototype.borderRadius_changed = function() {\n  var borderRadius = this.getBorderRadius_();\n  var borderWidth = this.getBorderWidth_();\n\n  this.contentContainer_.style['borderRadius'] =\n      this.contentContainer_.style['MozBorderRadius'] =\n      this.contentContainer_.style['webkitBorderRadius'] =\n      this.bubbleShadow_.style['borderRadius'] =\n      this.bubbleShadow_.style['MozBorderRadius'] =\n      this.bubbleShadow_.style['webkitBorderRadius'] = this.px(borderRadius);\n\n  this.tabsContainer_.style['paddingLeft'] =\n      this.tabsContainer_.style['paddingRight'] =\n      this.px(borderRadius + borderWidth);\n\n  this.redraw_();\n};\nInfoBubble.prototype['borderRadius_changed'] = InfoBubble.prototype.borderRadius_changed;\n\n\n/**\n * Get the width of the border\n *\n * @private\n * @return {number} width The width of the border.\n */\nInfoBubble.prototype.getBorderWidth_ = function() {\n  return parseInt(this.get('borderWidth'), 10) || 0;\n};\n\n\n/**\n * Set the width of the border\n *\n * @param {number} width The width of the border.\n */\nInfoBubble.prototype.setBorderWidth = function(width) {\n  this.set('borderWidth', width);\n};\nInfoBubble.prototype['setBorderWidth'] = InfoBubble.prototype.setBorderWidth;\n\n\n/**\n * borderWidth change MVC callback\n */\nInfoBubble.prototype.borderWidth_changed = function() {\n  var borderWidth = this.getBorderWidth_();\n\n  this.contentContainer_.style['borderWidth'] = this.px(borderWidth);\n  this.tabsContainer_.style['top'] = this.px(borderWidth);\n\n  this.updateArrowStyle_();\n  this.updateTabStyles_();\n  this.borderRadius_changed();\n  this.redraw_();\n};\nInfoBubble.prototype['borderWidth_changed'] = InfoBubble.prototype.borderWidth_changed;\n\n\n/**\n * Update the arrow style\n * @private\n */\nInfoBubble.prototype.updateArrowStyle_ = function() {\n  var borderWidth = this.getBorderWidth_();\n  var arrowSize = this.getArrowSize_();\n  var arrowStyle = this.getArrowStyle_();\n  var arrowOuterSizePx = this.px(arrowSize);\n  var arrowInnerSizePx = this.px(Math.max(0, arrowSize - borderWidth));\n\n  var outer = this.arrowOuter_;\n  var inner = this.arrowInner_;\n\n  this.arrow_.style['marginTop'] = this.px(-borderWidth);\n  outer.style['borderTopWidth'] = arrowOuterSizePx;\n  inner.style['borderTopWidth'] = arrowInnerSizePx;\n\n  // Full arrow or arrow pointing to the left\n  if (arrowStyle == 0 || arrowStyle == 1) {\n    outer.style['borderLeftWidth'] = arrowOuterSizePx;\n    inner.style['borderLeftWidth'] = arrowInnerSizePx;\n  } else {\n    outer.style['borderLeftWidth'] = inner.style['borderLeftWidth'] = 0;\n  }\n\n  // Full arrow or arrow pointing to the right\n  if (arrowStyle == 0 || arrowStyle == 2) {\n    outer.style['borderRightWidth'] = arrowOuterSizePx;\n    inner.style['borderRightWidth'] = arrowInnerSizePx;\n  } else {\n    outer.style['borderRightWidth'] = inner.style['borderRightWidth'] = 0;\n  }\n\n  if (arrowStyle < 2) {\n    outer.style['marginLeft'] = this.px(-(arrowSize));\n    inner.style['marginLeft'] = this.px(-(arrowSize - borderWidth));\n  } else {\n    outer.style['marginLeft'] = inner.style['marginLeft'] = 0;\n  }\n\n  // If there is no border then don't show thw outer arrow\n  if (borderWidth == 0) {\n    outer.style['display'] = 'none';\n  } else {\n    outer.style['display'] = '';\n  }\n};\n\n\n/**\n * Set the padding of the InfoBubble\n *\n * @param {number} padding The padding to apply.\n */\nInfoBubble.prototype.setPadding = function(padding) {\n  this.set('padding', padding);\n};\nInfoBubble.prototype['setPadding'] = InfoBubble.prototype.setPadding;\n\n\n/**\n * Set the close image url\n *\n * @param {string} src The url of the image used as a close icon\n */\nInfoBubble.prototype.setCloseSrc = function(src) {\n  if (src && this.close_) {\n    this.close_.src = src;\n  }\n};\nInfoBubble.prototype['setCloseSrc'] = InfoBubble.prototype.setCloseSrc;\n\n\n/**\n * Set the padding of the InfoBubble\n *\n * @private\n * @return {number} padding The padding to apply.\n */\nInfoBubble.prototype.getPadding_ = function() {\n  return parseInt(this.get('padding'), 10) || 0;\n};\n\n\n/**\n * padding changed MVC callback\n */\nInfoBubble.prototype.padding_changed = function() {\n  var padding = this.getPadding_();\n  this.contentContainer_.style['padding'] = this.px(padding);\n  this.updateTabStyles_();\n\n  this.redraw_();\n};\nInfoBubble.prototype['padding_changed'] = InfoBubble.prototype.padding_changed;\n\n\n/**\n * Add px extention to the number\n *\n * @param {number} num The number to wrap.\n * @return {string|number} A wrapped number.\n */\nInfoBubble.prototype.px = function(num) {\n  if (num) {\n    // 0 doesn't need to be wrapped\n    return num + 'px';\n  }\n  return num;\n};\n\n\n/**\n * Add events to stop propagation\n * @private\n */\nInfoBubble.prototype.addEvents_ = function() {\n  // We want to cancel all the events so they do not go to the map\n  var events = ['mousedown', 'mousemove', 'mouseover', 'mouseout', 'mouseup',\n      'mousewheel', 'DOMMouseScroll', 'touchstart', 'touchend', 'touchmove',\n      'dblclick', 'contextmenu', 'click'];\n\n  var bubble = this.bubble_;\n  this.listeners_ = [];\n  for (var i = 0, event; event = events[i]; i++) {\n    this.listeners_.push(\n      google.maps.event.addDomListener(bubble, event, function(e) {\n        e.cancelBubble = true;\n        if (e.stopPropagation) {\n          e.stopPropagation();\n        }\n      })\n    );\n  }\n};\n\n\n/**\n * On Adding the InfoBubble to a map\n * Implementing the OverlayView interface\n */\nInfoBubble.prototype.onAdd = function() {\n  if (!this.bubble_) {\n    this.buildDom_();\n  }\n\n  this.addEvents_();\n\n  var panes = this.getPanes();\n  if (panes) {\n    panes.floatPane.appendChild(this.bubble_);\n    panes.floatShadow.appendChild(this.bubbleShadow_);\n  }\n\n  /* once the infoBubble has been added to the DOM, fire 'domready' event */\n  google.maps.event.trigger(this, 'domready');\n};\nInfoBubble.prototype['onAdd'] = InfoBubble.prototype.onAdd;\n\n\n/**\n * Draw the InfoBubble\n * Implementing the OverlayView interface\n */\nInfoBubble.prototype.draw = function() {\n  var projection = this.getProjection();\n\n  if (!projection) {\n    // The map projection is not ready yet so do nothing\n    return;\n  }\n\n  var latLng = /** @type {google.maps.LatLng} */ (this.get('position'));\n\n  if (!latLng) {\n    this.close();\n    return;\n  }\n\n  var tabHeight = 0;\n\n  if (this.activeTab_) {\n    tabHeight = this.activeTab_.offsetHeight;\n  }\n\n  var anchorHeight = this.getAnchorHeight_();\n  var arrowSize = this.getArrowSize_();\n  var arrowPosition = this.getArrowPosition_();\n\n  arrowPosition = arrowPosition / 100;\n\n  var pos = projection.fromLatLngToDivPixel(latLng);\n  var width = this.contentContainer_.offsetWidth;\n  var height = this.bubble_.offsetHeight;\n\n  if (!width) {\n    return;\n  }\n\n  // Adjust for the height of the info bubble\n  var top = pos.y - (height + arrowSize);\n\n  if (anchorHeight) {\n    // If there is an anchor then include the height\n    top -= anchorHeight;\n  }\n\n  var left = pos.x - (width * arrowPosition);\n\n  this.bubble_.style['top'] = this.px(top);\n  this.bubble_.style['left'] = this.px(left);\n\n  var shadowStyle = parseInt(this.get('shadowStyle'), 10);\n\n  switch (shadowStyle) {\n    case 1:\n      // Shadow is behind\n      this.bubbleShadow_.style['top'] = this.px(top + tabHeight - 1);\n      this.bubbleShadow_.style['left'] = this.px(left);\n      this.bubbleShadow_.style['width'] = this.px(width);\n      this.bubbleShadow_.style['height'] =\n          this.px(this.contentContainer_.offsetHeight - arrowSize);\n      break;\n    case 2:\n      // Shadow is below\n      width = width * 0.8;\n      if (anchorHeight) {\n        this.bubbleShadow_.style['top'] = this.px(pos.y);\n      } else {\n        this.bubbleShadow_.style['top'] = this.px(pos.y + arrowSize);\n      }\n      this.bubbleShadow_.style['left'] = this.px(pos.x - width * arrowPosition);\n\n      this.bubbleShadow_.style['width'] = this.px(width);\n      this.bubbleShadow_.style['height'] = this.px(2);\n      break;\n  }\n};\nInfoBubble.prototype['draw'] = InfoBubble.prototype.draw;\n\n\n/**\n * Removing the InfoBubble from a map\n */\nInfoBubble.prototype.onRemove = function() {\n  if (this.bubble_ && this.bubble_.parentNode) {\n    this.bubble_.parentNode.removeChild(this.bubble_);\n  }\n  if (this.bubbleShadow_ && this.bubbleShadow_.parentNode) {\n    this.bubbleShadow_.parentNode.removeChild(this.bubbleShadow_);\n  }\n\n  for (var i = 0, listener; listener = this.listeners_[i]; i++) {\n    google.maps.event.removeListener(listener);\n  }\n};\nInfoBubble.prototype['onRemove'] = InfoBubble.prototype.onRemove;\n\n\n/**\n * Is the InfoBubble open\n *\n * @return {boolean} If the InfoBubble is open.\n */\nInfoBubble.prototype.isOpen = function() {\n  return this.isOpen_;\n};\nInfoBubble.prototype['isOpen'] = InfoBubble.prototype.isOpen;\n\n\n/**\n * Close the InfoBubble\n */\nInfoBubble.prototype.close = function() {\n  if (this.bubble_) {\n    this.bubble_.style['display'] = 'none';\n    // Remove the animation so we next time it opens it will animate again\n    this.bubble_.className =\n        this.bubble_.className.replace(this.animationName_, '');\n  }\n\n  if (this.bubbleShadow_) {\n    this.bubbleShadow_.style['display'] = 'none';\n    this.bubbleShadow_.className =\n        this.bubbleShadow_.className.replace(this.animationName_, '');\n  }\n  this.isOpen_ = false;\n};\nInfoBubble.prototype['close'] = InfoBubble.prototype.close;\n\n\n/**\n * Open the InfoBubble (asynchronous).\n *\n * @param {google.maps.Map=} opt_map Optional map to open on.\n * @param {google.maps.MVCObject=} opt_anchor Optional anchor to position at.\n */\nInfoBubble.prototype.open = function(opt_map, opt_anchor) {\n  var that = this;\n  window.setTimeout(function() {\n    that.open_(opt_map, opt_anchor);\n  }, 0);\n};\n\n\n/**\n * Open the InfoBubble\n * @private\n * @param {google.maps.Map=} opt_map Optional map to open on.\n * @param {google.maps.MVCObject=} opt_anchor Optional anchor to position at.\n */\nInfoBubble.prototype.open_ = function(opt_map, opt_anchor) {\n  this.updateContent_();\n\n  if (opt_map) {\n    this.setMap(opt_map);\n  }\n\n  if (opt_anchor) {\n    this.set('anchor', opt_anchor);\n    this.bindTo('anchorPoint', opt_anchor);\n    this.bindTo('position', opt_anchor);\n  }\n\n  // Show the bubble and the show\n  this.bubble_.style['display'] = this.bubbleShadow_.style['display'] = '';\n  var animation = !this.get('disableAnimation');\n\n  if (animation) {\n    // Add the animation\n    this.bubble_.className += ' ' + this.animationName_;\n    this.bubbleShadow_.className += ' ' + this.animationName_;\n  }\n\n  this.redraw_();\n  this.isOpen_ = true;\n\n  var pan = !this.get('disableAutoPan');\n  if (pan) {\n    var that = this;\n    window.setTimeout(function() {\n      // Pan into view, done in a time out to make it feel nicer :)\n      that.panToView();\n    }, 200);\n  }\n};\nInfoBubble.prototype['open'] = InfoBubble.prototype.open;\n\n\n/**\n * Set the position of the InfoBubble\n *\n * @param {google.maps.LatLng} position The position to set.\n */\nInfoBubble.prototype.setPosition = function(position) {\n  if (position) {\n    this.set('position', position);\n  }\n};\nInfoBubble.prototype['setPosition'] = InfoBubble.prototype.setPosition;\n\n\n/**\n * Returns the position of the InfoBubble\n *\n * @return {google.maps.LatLng} the position.\n */\nInfoBubble.prototype.getPosition = function() {\n  return /** @type {google.maps.LatLng} */ (this.get('position'));\n};\nInfoBubble.prototype['getPosition'] = InfoBubble.prototype.getPosition;\n\n\n/**\n * position changed MVC callback\n */\nInfoBubble.prototype.position_changed = function() {\n  this.draw();\n};\nInfoBubble.prototype['position_changed'] = InfoBubble.prototype.position_changed;\n\n\n/**\n * Pan the InfoBubble into view\n */\nInfoBubble.prototype.panToView = function() {\n  var projection = this.getProjection();\n\n  if (!projection) {\n    // The map projection is not ready yet so do nothing\n    return;\n  }\n\n  if (!this.bubble_) {\n    // No Bubble yet so do nothing\n    return;\n  }\n\n  var anchorHeight = this.getAnchorHeight_();\n  var height = this.bubble_.offsetHeight + anchorHeight;\n  var map = this.get('map');\n  var mapDiv = map.getDiv();\n  var mapHeight = mapDiv.offsetHeight;\n\n  var latLng = this.getPosition();\n  var centerPos = projection.fromLatLngToContainerPixel(map.getCenter());\n  var pos = projection.fromLatLngToContainerPixel(latLng);\n\n  // Find out how much space at the top is free\n  var spaceTop = centerPos.y - height;\n\n  // Fine out how much space at the bottom is free\n  var spaceBottom = mapHeight - centerPos.y;\n\n  var needsTop = spaceTop < 0;\n  var deltaY = 0;\n\n  if (needsTop) {\n    spaceTop *= -1;\n    deltaY = (spaceTop + spaceBottom) / 2;\n  }\n\n  pos.y -= deltaY;\n  latLng = projection.fromContainerPixelToLatLng(pos);\n\n  if (map.getCenter() != latLng) {\n    map.panTo(latLng);\n  }\n};\nInfoBubble.prototype['panToView'] = InfoBubble.prototype.panToView;\n\n\n/**\n * Converts a HTML string to a document fragment.\n *\n * @param {string} htmlString The HTML string to convert.\n * @return {Node} A HTML document fragment.\n * @private\n */\nInfoBubble.prototype.htmlToDocumentFragment_ = function(htmlString) {\n  htmlString = htmlString.replace(/^\\s*([\\S\\s]*)\\b\\s*$/, '$1');\n  var tempDiv = document.createElement('DIV');\n  tempDiv.innerHTML = htmlString;\n  if (tempDiv.childNodes.length == 1) {\n    return /** @type {!Node} */ (tempDiv.removeChild(tempDiv.firstChild));\n  } else {\n    var fragment = document.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n    return fragment;\n  }\n};\n\n\n/**\n * Removes all children from the node.\n *\n * @param {Node} node The node to remove all children from.\n * @private\n */\nInfoBubble.prototype.removeChildren_ = function(node) {\n  if (!node) {\n    return;\n  }\n\n  var child;\n  while (child = node.firstChild) {\n    node.removeChild(child);\n  }\n};\n\n\n/**\n * Sets the content of the infobubble.\n *\n * @param {string|Node} content The content to set.\n */\nInfoBubble.prototype.setContent = function(content) {\n  this.set('content', content);\n};\nInfoBubble.prototype['setContent'] = InfoBubble.prototype.setContent;\n\n\n/**\n * Get the content of the infobubble.\n *\n * @return {string|Node} The marker content.\n */\nInfoBubble.prototype.getContent = function() {\n  return /** @type {Node|string} */ (this.get('content'));\n};\nInfoBubble.prototype['getContent'] = InfoBubble.prototype.getContent;\n\n\n/**\n * Sets the marker content and adds loading events to images\n */\nInfoBubble.prototype.updateContent_ = function() {\n  if (!this.content_) {\n    // The Content area doesnt exist.\n    return;\n  }\n\n  this.removeChildren_(this.content_);\n  var content = this.getContent();\n  if (content) {\n    if (typeof content == 'string') {\n      content = this.htmlToDocumentFragment_(content);\n    }\n    this.content_.appendChild(content);\n\n    var that = this;\n    var images = this.content_.getElementsByTagName('IMG');\n    for (var i = 0, image; image = images[i]; i++) {\n      // Because we don't know the size of an image till it loads, add a\n      // listener to the image load so the marker can resize and reposition\n      // itself to be the correct height.\n      google.maps.event.addDomListener(image, 'load', function() {\n        that.imageLoaded_();\n      });\n    }\n  }\n  this.redraw_();\n};\n\n\n/**\n * Image loaded\n * @private\n */\nInfoBubble.prototype.imageLoaded_ = function() {\n  var pan = !this.get('disableAutoPan');\n  this.redraw_();\n  if (pan && (this.tabs_.length == 0 || this.activeTab_.index == 0)) {\n    this.panToView();\n  }\n};\n\n\n/**\n * Updates the styles of the tabs\n * @private\n */\nInfoBubble.prototype.updateTabStyles_ = function() {\n  if (this.tabs_ && this.tabs_.length) {\n    for (var i = 0, tab; tab = this.tabs_[i]; i++) {\n      this.setTabStyle_(tab.tab);\n    }\n    this.activeTab_.style['zIndex'] = this.baseZIndex_;\n    var borderWidth = this.getBorderWidth_();\n    var padding = this.getPadding_() / 2;\n    this.activeTab_.style['borderBottomWidth'] = 0;\n    this.activeTab_.style['paddingBottom'] = this.px(padding + borderWidth);\n  }\n};\n\n\n/**\n * Sets the style of a tab\n * @private\n * @param {Element} tab The tab to style.\n */\nInfoBubble.prototype.setTabStyle_ = function(tab) {\n  var backgroundColor = this.get('backgroundColor');\n  var borderColor = this.get('borderColor');\n  var borderRadius = this.getBorderRadius_();\n  var borderWidth = this.getBorderWidth_();\n  var padding = this.getPadding_();\n\n  var marginRight = this.px(-(Math.max(padding, borderRadius)));\n  var borderRadiusPx = this.px(borderRadius);\n\n  var index = this.baseZIndex_;\n  if (tab.index) {\n    index -= tab.index;\n  }\n\n  // The styles for the tab\n  var styles = {\n    'cssFloat': 'left',\n    'position': 'relative',\n    'cursor': 'pointer',\n    'backgroundColor': backgroundColor,\n    'border': this.px(borderWidth) + ' solid ' + borderColor,\n    'padding': this.px(padding / 2) + ' ' + this.px(padding),\n    'marginRight': marginRight,\n    'whiteSpace': 'nowrap',\n    'borderRadiusTopLeft': borderRadiusPx,\n    'MozBorderRadiusTopleft': borderRadiusPx,\n    'webkitBorderTopLeftRadius': borderRadiusPx,\n    'borderRadiusTopRight': borderRadiusPx,\n    'MozBorderRadiusTopright': borderRadiusPx,\n    'webkitBorderTopRightRadius': borderRadiusPx,\n    'zIndex': index,\n    'display': 'inline'\n  };\n\n  for (var style in styles) {\n    tab.style[style] = styles[style];\n  }\n\n  var className = this.get('tabClassName');\n  if (className != undefined) {\n    tab.className += ' ' + className;\n  }\n};\n\n\n/**\n * Add user actions to a tab\n * @private\n * @param {Object} tab The tab to add the actions to.\n */\nInfoBubble.prototype.addTabActions_ = function(tab) {\n  var that = this;\n  tab.listener_ = google.maps.event.addDomListener(tab, 'click', function() {\n    that.setTabActive_(this);\n  });\n};\n\n\n/**\n * Set a tab at a index to be active\n *\n * @param {number} index The index of the tab.\n */\nInfoBubble.prototype.setTabActive = function(index) {\n  var tab = this.tabs_[index - 1];\n\n  if (tab) {\n    this.setTabActive_(tab.tab);\n  }\n};\nInfoBubble.prototype['setTabActive'] = InfoBubble.prototype.setTabActive;\n\n\n/**\n * Set a tab to be active\n * @private\n * @param {Object} tab The tab to set active.\n */\nInfoBubble.prototype.setTabActive_ = function(tab) {\n  if (!tab) {\n    this.setContent('');\n    this.updateContent_();\n    return;\n  }\n\n  var padding = this.getPadding_() / 2;\n  var borderWidth = this.getBorderWidth_();\n\n  if (this.activeTab_) {\n    var activeTab = this.activeTab_;\n    activeTab.style['zIndex'] = this.baseZIndex_ - activeTab.index;\n    activeTab.style['paddingBottom'] = this.px(padding);\n    activeTab.style['borderBottomWidth'] = this.px(borderWidth);\n  }\n\n  tab.style['zIndex'] = this.baseZIndex_;\n  tab.style['borderBottomWidth'] = 0;\n  tab.style['marginBottomWidth'] = '-10px';\n  tab.style['paddingBottom'] = this.px(padding + borderWidth);\n\n  this.setContent(this.tabs_[tab.index].content);\n  this.updateContent_();\n\n  this.activeTab_ = tab;\n\n  this.redraw_();\n};\n\n\n/**\n * Set the max width of the InfoBubble\n *\n * @param {number} width The max width.\n */\nInfoBubble.prototype.setMaxWidth = function(width) {\n  this.set('maxWidth', width);\n};\nInfoBubble.prototype['setMaxWidth'] = InfoBubble.prototype.setMaxWidth;\n\n\n/**\n * maxWidth changed MVC callback\n */\nInfoBubble.prototype.maxWidth_changed = function() {\n  this.redraw_();\n};\nInfoBubble.prototype['maxWidth_changed'] = InfoBubble.prototype.maxWidth_changed;\n\n\n/**\n * Set the max height of the InfoBubble\n *\n * @param {number} height The max height.\n */\nInfoBubble.prototype.setMaxHeight = function(height) {\n  this.set('maxHeight', height);\n};\nInfoBubble.prototype['setMaxHeight'] = InfoBubble.prototype.setMaxHeight;\n\n\n/**\n * maxHeight changed MVC callback\n */\nInfoBubble.prototype.maxHeight_changed = function() {\n  this.redraw_();\n};\nInfoBubble.prototype['maxHeight_changed'] = InfoBubble.prototype.maxHeight_changed;\n\n\n/**\n * Set the min width of the InfoBubble\n *\n * @param {number} width The min width.\n */\nInfoBubble.prototype.setMinWidth = function(width) {\n  this.set('minWidth', width);\n};\nInfoBubble.prototype['setMinWidth'] = InfoBubble.prototype.setMinWidth;\n\n\n/**\n * minWidth changed MVC callback\n */\nInfoBubble.prototype.minWidth_changed = function() {\n  this.redraw_();\n};\nInfoBubble.prototype['minWidth_changed'] = InfoBubble.prototype.minWidth_changed;\n\n\n/**\n * Set the min height of the InfoBubble\n *\n * @param {number} height The min height.\n */\nInfoBubble.prototype.setMinHeight = function(height) {\n  this.set('minHeight', height);\n};\nInfoBubble.prototype['setMinHeight'] = InfoBubble.prototype.setMinHeight;\n\n\n/**\n * minHeight changed MVC callback\n */\nInfoBubble.prototype.minHeight_changed = function() {\n  this.redraw_();\n};\nInfoBubble.prototype['minHeight_changed'] = InfoBubble.prototype.minHeight_changed;\n\n\n/**\n * Add a tab\n *\n * @param {string} label The label of the tab.\n * @param {string|Element} content The content of the tab.\n */\nInfoBubble.prototype.addTab = function(label, content) {\n  var tab = document.createElement('DIV');\n  tab.innerHTML = label;\n\n  this.setTabStyle_(tab);\n  this.addTabActions_(tab);\n\n  this.tabsContainer_.appendChild(tab);\n\n  this.tabs_.push({\n    label: label,\n    content: content,\n    tab: tab\n  });\n\n  tab.index = this.tabs_.length - 1;\n  tab.style['zIndex'] = this.baseZIndex_ - tab.index;\n\n  if (!this.activeTab_) {\n    this.setTabActive_(tab);\n  }\n\n  tab.className = tab.className + ' ' + this.animationName_;\n\n  this.redraw_();\n};\nInfoBubble.prototype['addTab'] = InfoBubble.prototype.addTab;\n\n\n/**\n * Update a tab at a speicifc index\n *\n * @param {number} index The index of the tab.\n * @param {?string} opt_label The label to change to.\n * @param {?string} opt_content The content to update to.\n */\nInfoBubble.prototype.updateTab = function(index, opt_label, opt_content) {\n  if (!this.tabs_.length || index < 0 || index >= this.tabs_.length) {\n    return;\n  }\n\n  var tab = this.tabs_[index];\n  if (opt_label != undefined) {\n    tab.tab.innerHTML = tab.label = opt_label;\n  }\n\n  if (opt_content != undefined) {\n    tab.content = opt_content;\n  }\n\n  if (this.activeTab_ == tab.tab) {\n    this.setContent(tab.content);\n    this.updateContent_();\n  }\n  this.redraw_();\n};\nInfoBubble.prototype['updateTab'] = InfoBubble.prototype.updateTab;\n\n\n/**\n * Remove a tab at a specific index\n *\n * @param {number} index The index of the tab to remove.\n */\nInfoBubble.prototype.removeTab = function(index) {\n  if (!this.tabs_.length || index < 0 || index >= this.tabs_.length) {\n    return;\n  }\n\n  var tab = this.tabs_[index];\n  tab.tab.parentNode.removeChild(tab.tab);\n\n  google.maps.event.removeListener(tab.tab.listener_);\n\n  this.tabs_.splice(index, 1);\n\n  delete tab;\n\n  for (var i = 0, t; t = this.tabs_[i]; i++) {\n    t.tab.index = i;\n  }\n\n  if (tab.tab == this.activeTab_) {\n    // Removing the current active tab\n    if (this.tabs_[index]) {\n      // Show the tab to the right\n      this.activeTab_ = this.tabs_[index].tab;\n    } else if (this.tabs_[index - 1]) {\n      // Show a tab to the left\n      this.activeTab_ = this.tabs_[index - 1].tab;\n    } else {\n      // No tabs left to sho\n      this.activeTab_ = undefined;\n    }\n\n    this.setTabActive_(this.activeTab_);\n  }\n\n  this.redraw_();\n};\nInfoBubble.prototype['removeTab'] = InfoBubble.prototype.removeTab;\n\n\n/**\n * Get the size of an element\n * @private\n * @param {Node|string} element The element to size.\n * @param {number=} opt_maxWidth Optional max width of the element.\n * @param {number=} opt_maxHeight Optional max height of the element.\n * @return {google.maps.Size} The size of the element.\n */\nInfoBubble.prototype.getElementSize_ = function(element, opt_maxWidth,\n                                                opt_maxHeight) {\n  var sizer = document.createElement('DIV');\n  sizer.style['display'] = 'inline';\n  sizer.style['position'] = 'absolute';\n  sizer.style['visibility'] = 'hidden';\n\n  if (typeof element == 'string') {\n    sizer.innerHTML = element;\n  } else {\n    sizer.appendChild(element.cloneNode(true));\n  }\n\n  document.body.appendChild(sizer);\n  var size = new google.maps.Size(sizer.offsetWidth, sizer.offsetHeight);\n\n  // If the width is bigger than the max width then set the width and size again\n  if (opt_maxWidth && size.width > opt_maxWidth) {\n    sizer.style['width'] = this.px(opt_maxWidth);\n    size = new google.maps.Size(sizer.offsetWidth, sizer.offsetHeight);\n  }\n\n  // If the height is bigger than the max height then set the height and size\n  // again\n  if (opt_maxHeight && size.height > opt_maxHeight) {\n    sizer.style['height'] = this.px(opt_maxHeight);\n    size = new google.maps.Size(sizer.offsetWidth, sizer.offsetHeight);\n  }\n\n  document.body.removeChild(sizer);\n  delete sizer;\n  return size;\n};\n\n\n/**\n * Redraw the InfoBubble\n * @private\n */\nInfoBubble.prototype.redraw_ = function() {\n  this.figureOutSize_();\n  this.positionCloseButton_();\n  this.draw();\n};\n\n\n/**\n * Figure out the optimum size of the InfoBubble\n * @private\n */\nInfoBubble.prototype.figureOutSize_ = function() {\n  var map = this.get('map');\n\n  if (!map) {\n    return;\n  }\n\n  var padding = this.getPadding_();\n  var borderWidth = this.getBorderWidth_();\n  var borderRadius = this.getBorderRadius_();\n  var arrowSize = this.getArrowSize_();\n\n  var mapDiv = map.getDiv();\n  var gutter = arrowSize * 2;\n  var mapWidth = mapDiv.offsetWidth - gutter;\n  var mapHeight = mapDiv.offsetHeight - gutter - this.getAnchorHeight_();\n  var tabHeight = 0;\n  var width = /** @type {number} */ (this.get('minWidth') || 0);\n  var height = /** @type {number} */ (this.get('minHeight') || 0);\n  var maxWidth = /** @type {number} */ (this.get('maxWidth') || 0);\n  var maxHeight = /** @type {number} */ (this.get('maxHeight') || 0);\n\n  maxWidth = Math.min(mapWidth, maxWidth);\n  maxHeight = Math.min(mapHeight, maxHeight);\n\n  var tabWidth = 0;\n  if (this.tabs_.length) {\n    // If there are tabs then you need to check the size of each tab's content\n    for (var i = 0, tab; tab = this.tabs_[i]; i++) {\n      var tabSize = this.getElementSize_(tab.tab, maxWidth, maxHeight);\n      var contentSize = this.getElementSize_(tab.content, maxWidth, maxHeight);\n\n      if (width < tabSize.width) {\n        width = tabSize.width;\n      }\n\n      // Add up all the tab widths because they might end up being wider than\n      // the content\n      tabWidth += tabSize.width;\n\n      if (height < tabSize.height) {\n        height = tabSize.height;\n      }\n\n      if (tabSize.height > tabHeight) {\n        tabHeight = tabSize.height;\n      }\n\n      if (width < contentSize.width) {\n        width = contentSize.width;\n      }\n\n      if (height < contentSize.height) {\n        height = contentSize.height;\n      }\n    }\n  } else {\n    var content = /** @type {string|Node} */ (this.get('content'));\n    if (typeof content == 'string') {\n      content = this.htmlToDocumentFragment_(content);\n    }\n    if (content) {\n      var contentSize = this.getElementSize_(content, maxWidth, maxHeight);\n\n      if (width < contentSize.width) {\n        width = contentSize.width;\n      }\n\n      if (height < contentSize.height) {\n        height = contentSize.height;\n      }\n    }\n  }\n\n  if (maxWidth) {\n    width = Math.min(width, maxWidth);\n  }\n\n  if (maxHeight) {\n    height = Math.min(height, maxHeight);\n  }\n\n  width = Math.max(width, tabWidth);\n\n  if (width == tabWidth) {\n    width = width + 2 * padding;\n  }\n\n  arrowSize = arrowSize * 2;\n  width = Math.max(width, arrowSize);\n\n  // Maybe add this as a option so they can go bigger than the map if the user\n  // wants\n  if (width > mapWidth) {\n    width = mapWidth;\n  }\n\n  if (height > mapHeight) {\n    height = mapHeight - tabHeight;\n  }\n\n  if (this.tabsContainer_) {\n    this.tabHeight_ = tabHeight;\n    this.tabsContainer_.style['width'] = this.px(tabWidth);\n  }\n\n  this.contentContainer_.style['width'] = this.px(width);\n  this.contentContainer_.style['height'] = this.px(height);\n};\n\n\n/**\n *  Get the height of the anchor\n *\n *  This function is a hack for now and doesn't really work that good, need to\n *  wait for pixelBounds to be correctly exposed.\n *  @private\n *  @return {number} The height of the anchor.\n */\nInfoBubble.prototype.getAnchorHeight_ = function() {\n  var anchor = this.get('anchor');\n  if (anchor) {\n    var anchorPoint = /** @type google.maps.Point */(this.get('anchorPoint'));\n\n    if (anchorPoint) {\n      return -1 * anchorPoint.y;\n    }\n  }\n  return 0;\n};\n\nInfoBubble.prototype.anchorPoint_changed = function() {\n  this.draw();\n};\nInfoBubble.prototype['anchorPoint_changed'] = InfoBubble.prototype.anchorPoint_changed;\n\n\n/**\n * Position the close button in the right spot.\n * @private\n */\nInfoBubble.prototype.positionCloseButton_ = function() {\n  var br = this.getBorderRadius_();\n  var bw = this.getBorderWidth_();\n\n  var right = 2;\n  var top = 2;\n\n  if (this.tabs_.length && this.tabHeight_) {\n    top += this.tabHeight_;\n  }\n\n  top += bw;\n  right += bw;\n\n  var c = this.contentContainer_;\n  if (c && c.clientHeight < c.scrollHeight) {\n    // If there are scrollbars then move the cross in so it is not over\n    // scrollbar\n    right += 15;\n  }\n\n  this.close_.style['right'] = this.px(right);\n  this.close_.style['top'] = this.px(top);\n};\n"],"sourceRoot":"assets/scripts/"}